services:
  db:
    image: postgres:15-alpine
    container_name: flights-db
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - flights-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
  db-test:
    image: postgres:15-alpine
    container_name: flights-test-db
    env_file:
      - .env.test
    ports:
      - '5433:5432'
    networks:
      - flights-network
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flights-app
    env_file:
      - .env
    ports:
      - '3000:3000'
    networks:
      - flights-network
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
    driver: local

networks:
  flights-network:
    driver: bridge
